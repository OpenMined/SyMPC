name: Tests

on:
  push:
    branches:
      - main
    paths:
      - '**.py'
      - "setup.cfg"
      - ".github/workflows/**.yml"


  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**.py"
      - "setup.cfg"
      - ".github/workflows/**.yml"

jobs:
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Cache packages
        uses: actions/cache@v2
        id: cache-reqs
        with:
          path: ~/.eggs
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('**.egg') }}

      - name: Install build tools
        run: |
          sudo apt-get update
          python -m pip install --upgrade pip
          pip3 install -r requirements_dev.txt
          pip install -e .
      - name: Lint, format, and type-check
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 --config=.flake8 .
          black --check .
          isort --check-only .
          # Run type checker in CI such that type errors can be identified and gradually addressed.
          # Once all existing type errors are addressed, the `|| echo` after the mypy call can be removed.
          mypy src || echo "Type errors found, continuing build..."

      - name: Check docstring coverage
        run: |
          interrogate -mvp src/ -f 52.5

      - name: Scan for security issues
        run: |
          pip install bandit==1.7.0
          bandit -r src -ll

      - name: Run tests
        run: |
          pytest
